*
{
	font-family: georgia;
}

body
{
	font-size: 3.6vmin;
	background-color: rgb(35, 35, 45);
}

/* Generic */

.outer-gray-box
{
	color: rgb(200, 200, 210);
	background-color: rgb(50, 50, 60);

	border: 0.2em solid rgb(50, 50, 60);
	border-radius: 10em;

	box-shadow: 0.1em 0.1em rgb(40, 40, 50);
}

/* Main Menu */

.center-screen
{
	display: flex;
	justify-content: center;
	align-items: center;
	text-align: center;
}

.menu
{
	width: 75vw;
	height: 75vh;

	position: relative;
	margin: 12.5vh auto;

	border-radius: 2em;

	background-color: rgb(25, 25, 32);
}

.menu-title
{
	position: absolute;
	top: 22%;
	color: white;
	font-size: 3em;
}

.button-list
{
	list-style-type: none;
	position: absolute;
	top: 50%;
	padding: 0 0;
}

.button-list li
{
	display: inline-block;
	color: white;
	margin: 10px 30px;
}

.button-list li button
{
	padding: 10px 30px;

	box-shadow: 2px 2px rgb(40, 40, 50);

	cursor: pointer;

	font-size: 0.8em;
}

.button-list li button:hover
{
	position: relative;
	top: 1px;
	left: 1px;

	box-shadow: 1px 1px rgb(40, 40, 50);
}

/* New Game */

.containing-box
{
	position: relative;

	width: 50vw;
	height: 25vh;

	margin: 10px auto;
	border-radius: 2vw;
}

.title-route
{
	width: 100%;

	top: 0;

	text-align: center;
	font-weight: bold;

	font-size: 1.8em;

	margin: 0;
}

.img-place
{
	position: absolute;
	top: 60%;
	left: 10%;

	/* This makes the center the central point, instead of the top-left */
	transform: translateY(-50%);

	width: 13vmin;
	height: 13vmin;

	background-color: rgb(47, 47, 57);
	border: 0.1em solid rgb(55 55 65);
	border-radius: 5em;
}

.img-place img
{
	position: absolute;
	top: -75%;
	/* transform: translateY(-10%); */
	left: 50%;
	transform: translateX(-50%);

	width: 200%;
	/* height: 100%; */
	/* height: 100%; */

	/* min-width: fit-content; */
	/* max-height: fit-content; */
	/* min-width: fit-content; */

	margin: auto;

	image-rendering: pixelated;
}

.pokemon-select-wrapper
{
	width: 42%;

	margin-left: calc(13vmin + 15%);
}

.pokemon-input-field
{
	color: rgb(200, 200, 210);
	background-color: rgb(47, 47, 57);

	width: 100%;
	height: 7.25vmin;

	margin-top: 4vmin;

	padding-left: 5%;

	border: 0.1em solid rgb(55 55 65);
	border-radius: 0.25em;

	font-size: 1em;

	box-sizing: border-box;
}

.pokemon-input-field:focus
{
	outline: none;

	border-bottom-left-radius: 0;
	border-bottom-right-radius: 0;
}

/* This exists because the 'blur' event of 'pokemon_input_field' is called when the user presses the click, but doesn't release it, in a 'pokemon_list' list.
When this happens, 'value' takes the value of 'placeholder', as if the user has already made a choice, before any 'click' event is triggered.
To give the user the feeling that no choice has been made yet, this rule colors the 'value' of 'pokemon_input_field' with 'placeholder' color.

Note: There may be better ways to deal with this scenario. As I'm still learning, this suffices for now.*/
.pokemon-select-wrapper:active .pokemon-input-field
{
	color: rgb(117, 117, 117);
}

.pokemon_list
{
	list-style: none;

	margin: 0;
	padding: 0;
}

.pokemon_list li
{
	cursor: pointer;

	width: 100%;
	height: 8vmin;

	color: rgb(200, 200, 210);
	background-color: rgb(47, 47, 57);

	border: 0.1em solid rgb(55 55 65);

	box-sizing: border-box;

	/* List items should only be displayed when the 'pokemon-input-field' is in focus or a list item is being clicked on*/
	display: none;
}

/* `.option` represents the part of the list item that is meant to be clickable to select that pokemon */
.pokemon_list li .option *
{
	/* 
		This makes all children of option not receive click events.
		Browser Support: All browsers from 2013 forwards can use this, except all versions of opera-mini.
	*/
	pointer-events: none;
}

/*  Applied style:
    1 - to all list items when 'pokemon-input-field' is in focus
    2 - whenever a list item is 'active', the 'active' pseudoclass propagates to their parents, and in this case, one of the parents is 'pokemon_list', therefore when an item is activated, all other items are also styled
    Note: this makes it possible to click in an item and trigger the 'click' event before it disappears (using 'focus' & 'blur' events, for example)
*/
.pokemon-input-field:focus + .pokemon_list li,
.pokemon_list:active li
{
	display: block;
}

.pokemon_list li:last-child
{
	border-bottom-left-radius: 0.1em;
	border-bottom-right-radius: 0.1em;
}

.pokemon_list li .option
{
	position: relative;

	height: 100%;
}

.pokemon_list li .option img
{
	position: absolute;

	left: 0;
	top: -50%;

	width: auto;
	height: 150%;

	/* image-rendering: pixelated; */
}

.pokemon_list li .option p
{
	position: relative;
	top: 50%;
	transform: translateY(-50%);

	margin: 0;
	padding-left: 30%;
}

.state-dropdown-wrapper
{
	position: absolute;

	top: 45%;
	right: 4.5%;

	width: 20%;
	height: 7.25vmin;
}

.state-dropdown
{
	color: rgb(200, 200, 210);
	background-color: rgb(47, 47, 57);

	width: 100%;
	height: 100%;

	border: 0.1em solid rgb(55 55 65);

	font-size: 0.8em;

	box-sizing: border-box;
}

.state-dropdown:focus
{
	outline: 0.1em solid rgb(105 105 115);
}